"""
################################################################
Program: createIGSMTEMpoolExcelSummary.py 

Description: Program organizes time series data from summary 
               files generated by xtranalchrt606c using IGSMVEG 
               land cover types defined by Schlosser et al. 
               (2007) into sheets of an Excel workbook and 
               aggregates the data in some types into more 
               general land cover categores (e.g. "forests").
               The program also creates a sheet for young forest
               types based on a second summary file.  Finally,
               the program determines changes in pool sizes over 
               the specified time period (startyr to lastyr) for 
               the aggregated land cover categories. 
               
Reference: Schlosser, C. A., D. Kicklighter and A. Sokolov (2007) 
             A Global Land System Framework for Integrated Climate
             -Change Assessments. MIT Joint Program on Science and 
             Policy of Global Change Report No. 147. Massachusetts 
             Institute of Technology, Cambridge, Massachusetts. 
             (see also 
             https://globalchange.mit.edu/publication/15553).

################################################################

BY DOWNLOADING THIS PROGRAM YOU AGREE TO THE FOLLOWING TERMS OF USE:

Copyright 2019.  The Marine Biological Laboratory (MBL). All 
Rights Reserved.  

Permission to use, copy, modify, and distribute this software, 
including all object code and source code, and any accompanying
documentation (together the Software) for educational and 
not-for-profit research purposes, without fee and without a signed
licensing agreement, is hereby granted, provided that the above 
copyright notice, this paragraph and the following three paragraphs
appear in all copies, modifications, and distributions. For the 
avoidance of doubt, educational and not-for-profit research purposes
excludes any service or part of selling a service that uses the 
Software. To obtain a commercial license for the Software, contact 
the Technology Commercialization team at the Polsky Center for 
Entrepreneurship and Innovation, University of Chicago, 1452 East 
53rd Street, 2nd floor, Chicago, IL 60615.

Created by David W. Kicklighter at The Marine Biological Laboratory.

The Software is copyrighted by MBL. The Software is supplied 
"as is", without any accompanying services from MBL. MBL 
does not warrant that the operation of the Software will be 
uninterrupted or error-free. The end-user understands that the 
Software was developed for research purposes and is advised not 
to rely exclusively on the Software for any reason.

IN NO EVENT SHALL MBL BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT, 
SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST
PROFITS, ARISING OUT OF THE USE OF THE SOFTWARE, EVEN IF MBL 
HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. MBL SPECIFICALLY
DISCLAIMS ANY WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. 
THE SOFTWARE PROVIDED HEREUNDER IS PROVIDED "AS IS".  MBL HAS 
NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
ENHANCEMENTS, OR MODIFICATIONS.

################################################################
"""

if __name__ == '__main__':
  import sys

  import pandas as pd
  import numpy as np
  from xlwt import Workbook, Formula, easyxf
  
  style1 = easyxf( 'font: name Calibri, height 220'  )
  
  isumfile = open( 'TEMpool1500_2100region.sum', 'r' )
  isecdsumfile = open( 'TEMpoolYoungForest1500_2100region.sum', 'r' )
#  iurbnsumfile = open( 'TEMpoolUrban1500_2100region.sum', 'r' )

  osumxcelfile = 'TEMpool_2001_2100region.xls'
  
  // Specify TEM pool being analyzed
  varname = 'VEGC'

  // firstyr of the summary file (includes spin-up period)
  firstyr = 299

  // First year to start determining cumulative fluxes  
  startyr = 2001

  //Last year of the summary file
  lastyr = 2100  
  

  yrdata = {}
  lc00data = {}
  lc01data = {}
  lc02data = {}
  lc03data = {}
  lc04data = {}
  lc05data = {}
  lc06data = {}
  lc07data = {}
  lc08data = {}
  lc09data = {}
  lc10data = {}
  lc11data = {}
  lc12data = {}
  lc13data = {}
  lc14data = {}
  lc15data = {}
  lc16data = {}
  lc17data = {}
  lc18data = {}
  lc19data = {}
  lc20data = {}
  lc21data = {}
  lc22data = {}
  lc23data = {}
  lc24data = {}
  lc25data = {}
  lc26data = {}
  lc27data = {}
  lc28data = {}
  lc29data = {}
#  lc30data = {}
  lc31data = {}
#  lc32data = {}
  lc33data = {}
#  lc34data = {}
#  lc35data = {}
  
  primforestdata = {}
  natforestdata = {}
  allforestdata = {}
  shrubdata = {}
  grassdata = {}
  otherdata = {}
  totaldata = {}
  
  secd01data = {}
  secd02data = {}
  secd03data = {}
  secd04data = {}
  secd05data = {}
  secd06data = {}
  secd07data = {}
  secd08data = {}
  secd26data = {}
  secd28data = {}
  secdforestdata = {}

#  urban02data = {}
#  urban03data = {}
#  urban04data = {}
#  urban05data = {}
#  urban06data = {}
#  urban34data = {}
#  urban35data = {}
  urbanforestdata = {}
#  urbantotaldata = {}


  #Initialize land cover types
  for dyr in range( firstyr, (lastyr+1) ):

    yrdata[dyr] = 0
    lc00data[dyr] = 0.0
    lc01data[dyr] = 0.0
    lc02data[dyr] = 0.0
    lc03data[dyr] = 0.0
    lc04data[dyr] = 0.0
    lc05data[dyr] = 0.0
    lc06data[dyr] = 0.0
    lc07data[dyr] = 0.0
    lc08data[dyr] = 0.0
    lc09data[dyr] = 0.0
    lc10data[dyr] = 0.0
    lc11data[dyr] = 0.0
    lc12data[dyr] = 0.0
    lc13data[dyr] = 0.0
    lc14data[dyr] = 0.0
    lc15data[dyr] = 0.0
    lc16data[dyr] = 0.0
    lc17data[dyr] = 0.0
    lc18data[dyr] = 0.0
    lc19data[dyr] = 0.0
    lc20data[dyr] = 0.0
    lc21data[dyr] = 0.0
    lc22data[dyr] = 0.0
    lc23data[dyr] = 0.0
    lc24data[dyr] = 0.0
    lc25data[dyr] = 0.0
    lc26data[dyr] = 0.0
    lc27data[dyr] = 0.0
    lc28data[dyr] = 0.0
    lc29data[dyr] = 0.0
#    lc30data[dyr] = 0.0
    lc31data[dyr] = 0.0
#    lc32data[dyr] = 0.0
    lc33data[dyr] = 0.0
#    lc34data[dyr] = 0.0
#    lc35data[dyr] = 0.0

    primforestdata[dyr] = 0.0
    natforestdata[dyr] = 0.0
    allforestdata[dyr] = 0.0
    shrubdata[dyr] = 0.0
    grassdata[dyr] = 0.0    
    otherdata[dyr] = 0.0
    totaldata[dyr] = 0.0

    secd01data[dyr] = 0.0
    secd02data[dyr] = 0.0
    secd03data[dyr] = 0.0
    secd04data[dyr] = 0.0
    secd05data[dyr] = 0.0
    secd06data[dyr] = 0.0
    secd07data[dyr] = 0.0
    secd08data[dyr] = 0.0
    secd26data[dyr] = 0.0
    secd28data[dyr] = 0.0
    secdforestdata[dyr] = 0.0

#    urban02data[dyr] = 0.0
#    urban03data[dyr] = 0.0
#    urban04data[dyr] = 0.0
#    urban05data[dyr] = 0.0
#    urban06data[dyr] = 0.0
#    urban34data[dyr] = 0.0
#    urban35data[dyr] = 0.0
    urbanforestdata[dyr] = 0.0
#    urbantotaldata[dyr] = 0.0


# Read in data from main summary file ##########################

  # Skip over header information
  line = isumfile.readline()
  line = isumfile.readline()
  line = isumfile.readline()
  line = isumfile.readline()
  line = isumfile.readline()
  line = isumfile.readline()
  line = isumfile.readline()
  line = isumfile.readline()
  line = isumfile.readline()
  line = isumfile.readline()
  line = isumfile.readline()


  # Read in data for each land cover type
  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
#    vegtype = int( field[0] )
    yrdata[dyr] = int( field[1] )
#    ngrid = int( field[2] )
#    area = int( field[3] )
    lc00data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc01data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc02data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc03data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc04data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc05data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc06data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc07data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc08data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc09data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc10data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc11data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc12data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc13data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc14data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc15data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc16data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc17data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc18data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc19data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc20data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc21data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc22data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc23data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc24data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc25data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc26data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc27data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc28data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc29data[dyr] = float( field[4] )

#  for dyr in range( firstyr, (lastyr+1) ):
#    line = isumfile.readline()
#    field = line.split( "," )
    
#    lc30data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc31data[dyr] = float( field[4] )

#  for dyr in range( firstyr, (lastyr+1) ):
#    line = isumfile.readline()
#    field = line.split( "," )
    
#    lc32data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    lc33data[dyr] = float( field[4] )

#  for dyr in range( firstyr, (lastyr+1) ):
#    line = isumfile.readline()
#    field = line.split( "," )
    
#    lc34data[dyr] = float( field[4] )

#  for dyr in range( firstyr, (lastyr+1) ):
#    line = isumfile.readline()
#    field = line.split( "," )
    
#    lc35data[dyr] = float( field[4] )


  line = isumfile.readline()
    
  # Read in total sum data
  for dyr in range( firstyr, (lastyr+1) ):
    line = isumfile.readline()
    field = line.split( "," )
    
    totaldata[dyr] = float( field[4] )

# Read in data from secondary forest summary file ##############

  # Skip over header information
  line = isecdsumfile.readline()
  line = isecdsumfile.readline()
  line = isecdsumfile.readline()
  line = isecdsumfile.readline()
  line = isecdsumfile.readline()
  line = isecdsumfile.readline()
  line = isecdsumfile.readline()
  line = isecdsumfile.readline()
  line = isecdsumfile.readline()
  line = isecdsumfile.readline()
  line = isecdsumfile.readline()


  # Read in data for each secondary forest type
  for dyr in range( firstyr, (lastyr+1) ):
    line = isecdsumfile.readline()
    field = line.split( "," )
    
    secd01data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isecdsumfile.readline()
    field = line.split( "," )
    
    secd02data[dyr] = float( field[4] )


  for dyr in range( firstyr, (lastyr+1) ):
    line = isecdsumfile.readline()
    field = line.split( "," )
    
    secd03data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isecdsumfile.readline()
    field = line.split( "," )
    
    secd04data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isecdsumfile.readline()
    field = line.split( "," )
    
    secd05data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isecdsumfile.readline()
    field = line.split( "," )
    
    secd06data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isecdsumfile.readline()
    field = line.split( "," )
    
    secd07data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isecdsumfile.readline()
    field = line.split( "," )
    
    secd08data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isecdsumfile.readline()
    field = line.split( "," )
    
    secd26data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    line = isecdsumfile.readline()
    field = line.split( "," )
    
    secd28data[dyr] = float( field[4] )

  for dyr in range( firstyr, (lastyr+1) ):
    secdforestdata[dyr] = secd01data[dyr] \
                          + secd02data[dyr] \
                          + secd03data[dyr] \
                          + secd04data[dyr] \
                          + secd05data[dyr] \
                          + secd06data[dyr] \
                          + secd07data[dyr] \
                          + secd08data[dyr] \
                          + secd26data[dyr] \
                          + secd28data[dyr] 
                          

# Read in data from urban summary file ##############

  # Skip over header information
#  line = iurbnsumfile.readline()
#  line = iurbnsumfile.readline()
#  line = iurbnsumfile.readline()
#  line = iurbnsumfile.readline()
#  line = iurbnsumfile.readline()
#  line = iurbnsumfile.readline()
#  line = iurbnsumfile.readline()
#  line = iurbnsumfile.readline()
#  line = iurbnsumfile.readline()
#  line = iurbnsumfile.readline()
#  line = iurbnsumfile.readline()


  # Read in data for each secondary forest type
#  for dyr in range( firstyr, (lastyr+1) ):
#    line = iurbnsumfile.readline()
#    field = line.split( "," )
    
#    urban01data[dyr] = float( field[4] )


#  for dyr in range( firstyr, (lastyr+1) ):
#    line = iurbnsumfile.readline()
#    field = line.split( "," )
    
#    urban07data[dyr] = float( field[4] )

#  for dyr in range( firstyr, (lastyr+1) ):
#    line = iurbnsumfile.readline()
#    field = line.split( "," )
    
#    urban04data[dyr] = float( field[4] )

#  for dyr in range( firstyr, (lastyr+1) ):
#    line = iurbnsumfile.readline()
#    field = line.split( "," )
    
#    urban05data[dyr] = float( field[4] )

#  for dyr in range( firstyr, (lastyr+1) ):
#    line = iurbnsumfile.readline()
#    field = line.split( "," )
    
#    urban06data[dyr] = float( field[4] )

#  for dyr in range( firstyr, (lastyr+1) ):
#    line = iurbnsumfile.readline()
#    field = line.split( "," )
    
#    urban16data[dyr] = float( field[4] )

#  for dyr in range( firstyr, (lastyr+1) ):
#    line = iurbnsumfile.readline()
#    field = line.split( "," )
    
#    urban17data[dyr] = float( field[4] )

#  for dyr in range( firstyr, (lastyr+1) ):
#    urbanforestdata[dyr] = urban02data[dyr] \
#                          + urban03data[dyr] \
#                          + urban04data[dyr] \
#                          + urban05data[dyr] \
#                          + urban06data[dyr]

#    urbantotaldata[dyr] = urbanforestdata[dyr] \
#                          + urban16data[dyr] \
#                          + urban17data[dyr]
                          

  for dyr in range( firstyr, (lastyr+1) ):
    allforestdata[dyr] = lc01data[dyr] \
                         + lc02data[dyr] \
                         + lc03data[dyr] \
                         + lc04data[dyr] \
                         + lc05data[dyr] \
                         + lc06data[dyr] \
                         + lc07data[dyr] \
                         + lc08data[dyr] \
                         + lc26data[dyr] \
                         + lc28data[dyr] 

    natforestdata[dyr] = allforestdata[dyr] \
                         - urbanforestdata[dyr]

    primforestdata[dyr] = natforestdata[dyr] \
                          - secdforestdata[dyr]
    
    shrubdata[dyr] = lc09data[dyr] \
                     + lc10data[dyr] \
                     + lc11data[dyr]
                     
    
    grassdata[dyr] = lc13data[dyr] \
                     + lc14data[dyr] \
                     + lc27data[dyr] \
                     + lc29data[dyr] 
                     

    otherdata[dyr] = lc00data[dyr] \
                     + lc12data[dyr] \
                     + lc17data[dyr] \
                     + lc18data[dyr] \
                     + lc19data[dyr] \
                     + lc20data[dyr] \
                     + lc21data[dyr] \
                     + lc22data[dyr] \
                     + lc23data[dyr] \
                     + lc24data[dyr] \
                     + lc25data[dyr] 
                     
       
# *********Create DataFrame*************************************
      
  data = { 'year' : yrdata,
  	       'lc00' : lc00data,
  	       'lc01' : lc01data,
  	       'lc02' : lc02data,
  	       'lc03' : lc03data,
  	       'lc04' : lc04data,
  	       'lc05' : lc05data,
  	       'lc06' : lc06data,
  	       'lc07' : lc07data,
  	       'lc08' : lc08data,
  	       'lc09' : lc09data,
  	       'lc10' : lc10data,
  	       'lc11' : lc11data,
  	       'lc12' : lc12data,
  	       'lc13' : lc13data,
  	       'lc14' : lc14data,
  	       'lc15' : lc15data,
  	       'lc16' : lc16data,
  	       'lc17' : lc17data,
  	       'lc18' : lc18data,
  	       'lc19' : lc19data,
  	       'lc20' : lc20data,
  	       'lc21' : lc21data,
  	       'lc22' : lc22data,
  	       'lc23' : lc23data,
  	       'lc24' : lc24data,
  	       'lc25' : lc25data,
  	       'lc26' : lc26data,
  	       'lc27' : lc27data,
  	       'lc28' : lc28data,
  	       'lc29' : lc29data,
#  	       'lc30' : lc30data,
  	       'lc31' : lc31data,
#  	       'lc32' : lc32data,
  	       'lc33' : lc33data,
#  	       'lc34' : lc34data,
#  	       'lc35' : lc35data,
  	       'secd01' : secd01data,
  	       'secd02' : secd02data,
  	       'secd03' : secd03data,
  	       'secd04' : secd04data,
  	       'secd05' : secd05data,
  	       'secd06' : secd06data,
  	       'secd07' : secd07data,
  	       'secd08' : secd08data,
  	       'secd26' : secd26data,
  	       'secd28' : secd28data,
  	       'secdforest' : secdforestdata,
#  	       'urbn02' : urban02data,
#  	       'urbn03' : urban03data,
#  	       'urbn04' : urban04data,
#  	       'urbn05' : urban05data,
#  	       'urbn06' : urban06data,
  	       'urbnforest' : urbanforestdata,
#  	       'urbn16' : urban16data,
#  	       'urbn17' : urban17data,
#  	       'urbntotal' : urbantotaldata,
   	       'allforest' : allforestdata,
  	       'natforest' : natforestdata,
  	       'primforest' : primforestdata,
  	       'shrub' : shrubdata,
  	       'grass' : grassdata,
  	       'other' : otherdata,
           'total' : totaldata }  
           		       	
  df = pd.DataFrame( data, 
                     columns = ['year', 
                                'lc00', 
                                'lc01', 
                                'lc02', 
                                'lc03', 
                                'lc04', 
                                'lc05', 
                                'lc06', 
                                'lc07', 
                                'lc08', 
                                'lc09', 
                                'lc10', 
                                'lc11', 
                                'lc12', 
                                'lc13', 
                                'lc14', 
                                'lc15', 
                                'lc16', 
                                'lc17',
                                'lc18',
                                'lc19',
                                'lc20',
                                'lc21',
                                'lc22',
                                'lc23',
                                'lc24',
                                'lc25',
                                'lc26',
                                'lc27',
                                'lc28',
                                'lc29',
#                                'lc30',
                                'lc31',
#                                'lc32',
                                'lc33',
#                                'lc34',
#                                'lc35',
                                'secd01',
                                'secd02',
                                'secd03',
                                'secd04',
                                'secd05',
                                'secd06',
                                'secd07',
                                'secd08',
                                'secd26',
                                'secd28',
                                'secdforest',
#                                'urbn02',
#                                'urbn03',
#                                'urbn04',
#                                'urbn05',
#                                'urbn06',
                                'urbnforest',
#                                'urbn16',
#                                'urbn17',
#                                'urbntotal',
                                'allforest',
                                'natforest',
                                'primforest',
                                'shrub',
                                'grass',
                                'other',
                                'total'] )
  
#  print df
  
# ************Create Excel file with output*********************

  wb = Workbook()
  ws1 = wb.add_sheet( 'Sheet 1' )
  wssecd = wb.add_sheet( 'YoungForests' )
  wsfor = wb.add_sheet( 'Forests' )
  wsshrub = wb.add_sheet( 'Shrub' )
  wsgrass = wb.add_sheet( 'Grass' )
  wsother = wb.add_sheet( 'Other' )
#  wsurbn = wb.add_sheet( 'Urban' )
 
  numrows = lastyr - firstyr + 1 

  # Sheet 1
  ws1.col(0).width = 18 * 256
  ws1.write( 0, 0, 'Year', style1 )
  for irow in range( numrows ):
    ws1.write( (irow+1), 0, yrdata[firstyr+irow], style1 )
    
  ws1.write( (numrows+2), 0, 'Average (2001-2005)', style1 )
  ws1.write( (numrows+3), 0, 'StdDev (2001-2005)', style1 )

  ws1.write( (numrows+5), 0, 'Average (2096-2100)', style1 )
  ws1.write( (numrows+6), 0, 'StdDev (2096-2100)', style1 )


  ws1.col(1).width = 10 * 256
  ws1.write( 0, 1, 'Crops (LC15)', style1 ) 
  for irow in range( numrows ):
    ws1.write( (irow+1), 1, lc15data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
  stdevlabel = "STDEV($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
  ws1.write( (numrows+2), 1, Formula( averagelabel ), style1 )
  ws1.write( (numrows+3), 1, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
  stdevlabel = "STDEV($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"  
  ws1.write( (numrows+5), 1, Formula( averagelabel ), style1 )
  ws1.write( (numrows+6), 1, Formula( stdevlabel ), style1  )


  ws1.write( (startyr-firstyr), 2, '2001-2100', style1 )
  for irow in range( (startyr-firstyr+1), (lastyr-firstyr+2) ):
    dyr = startyr + (irow - (startyr-firstyr+1))
    aggregdata = lc15data[dyr] - lc15data[startyr-1] 
    ws1.write( irow, 2, aggregdata, style1 )


  ws1.col(3).width = 15 * 256
  ws1.write( 0, 3, 'Biofuels (LC16)', style1 ) 
  for irow in range( numrows ):
    ws1.write( (irow+1), 3, lc16data[firstyr+irow], style1 )


  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
  stdevlabel = "STDEV($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
  ws1.write( (numrows+2), 3, Formula( averagelabel ), style1 )
  ws1.write( (numrows+3), 3, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
  stdevlabel = "STDEV($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
  ws1.write( (numrows+5), 3, Formula( averagelabel ), style1 )
  ws1.write( (numrows+6), 3, Formula( stdevlabel ), style1  )


  ws1.write( (startyr-firstyr), 4, '2001-2100', style1 )
  for irow in range( (startyr-firstyr+1), (lastyr-firstyr+2) ):
    dyr = startyr + (irow - (startyr-firstyr+1))
    aggregdata = lc16data[dyr] - lc16data[startyr-1] 
    ws1.write( irow, 4, aggregdata, style1 )


  ws1.col(5).width = 16 * 256
  ws1.write( 0, 5, 'Pasture (LC33)', style1 ) 
  for irow in range( numrows ):
    ws1.write( (irow+1), 5, lc33data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($F$" + str( inityr ) + ":$F$" + str( endyr ) + ")"
  stdevlabel = "STDEV($F$" + str( inityr ) + ":$F$" + str( endyr ) + ")"
  ws1.write( (numrows+2), 5, Formula( averagelabel ), style1 )
  ws1.write( (numrows+3), 5, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($F$" + str( inityr ) + ":$F$" + str( endyr ) + ")"
  stdevlabel = "STDEV($F$" + str( inityr ) + ":$F$" + str( endyr ) + ")"
  ws1.write( (numrows+5), 5, Formula( averagelabel ), style1 )
  ws1.write( (numrows+6), 5, Formula( stdevlabel ), style1  )


  ws1.write( (startyr-firstyr), 6, '2001-2100', style1 )
  for irow in range( (startyr-firstyr+1), (lastyr-firstyr+2) ):
    dyr = startyr + (irow - (startyr-firstyr+1))
    aggregdata = lc33data[dyr] - lc33data[startyr-1] 
    ws1.write( irow, 6, aggregdata, style1 )


  ws1.col(7).width = 15 * 256
  ws1.write( 0, 7, 'Total', style1 ) 
  for irow in range( numrows ):
    ws1.write( (irow+1), 7, totaldata[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($H$" + str( inityr ) + ":$H$" + str( endyr ) + ")"
  stdevlabel = "STDEV($H$" + str( inityr ) + ":$H$" + str( endyr ) + ")"
  ws1.write( (numrows+2), 7, Formula( averagelabel ), style1 )
  ws1.write( (numrows+3), 7, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($H$" + str( inityr ) + ":$H$" + str( endyr ) + ")"
  stdevlabel = "STDEV($H$" + str( inityr ) + ":$H$" + str( endyr ) + ")"
  ws1.write( (numrows+5), 7, Formula( averagelabel ), style1 )
  ws1.write( (numrows+6), 7, Formula( stdevlabel ), style1  )


  ws1.write( (startyr-firstyr), 8, '2001-2100', style1 )
  for irow in range( (startyr-firstyr+1), (lastyr-firstyr+2) ):
    dyr = startyr + (irow - (startyr-firstyr+1))
    aggregdata = totaldata[dyr] - totaldata[startyr-1] 
    ws1.write( irow, 8, aggregdata, style1 )


  ws1.col(16).width = 15 * 256
  ws1.write( 0, 16, 'Lakes (LC31)', style1 ) 
  for irow in range( numrows ):
    ws1.write( (irow+1), 16, lc31data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($Q$" + str( inityr ) + ":$Q$" + str( endyr ) + ")"
  stdevlabel = "STDEV($Q$" + str( inityr ) + ":$Q$" + str( endyr ) + ")"
  ws1.write( (numrows+2), 16, Formula( averagelabel ), style1 )
  ws1.write( (numrows+3), 16, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($Q$" + str( inityr ) + ":$Q$" + str( endyr ) + ")"
  stdevlabel = "STDEV($Q$" + str( inityr ) + ":$Q$" + str( endyr ) + ")"
  ws1.write( (numrows+5), 16, Formula( averagelabel ), style1 )
  ws1.write( (numrows+6), 16, Formula( stdevlabel ), style1  )


  ws1.write( (startyr-firstyr), 17, '2001-2100', style1 )
  for irow in range( (startyr-firstyr+1), (lastyr-firstyr+2) ):
    dyr = startyr + (irow - (startyr-firstyr+1))
    aggregdata = lc31data[dyr] - lc31data[startyr-1] 
    ws1.write( irow, 17, aggregdata, style1 )

  # Young Forest Sheet *************************************

  wssecd.col(0).width = 18 * 256
  wssecd.write( 0, 0, 'Year', style1 )
  for irow in range( numrows ):
    wssecd.write( (irow+1), 0, yrdata[firstyr+irow], style1 )

  wssecd.write( (numrows+2), 0, 'Average (2001-2005)', style1 )
  wssecd.write( (numrows+3), 0, 'StdDev (2001-2005)', style1 )

  wssecd.write( (numrows+5), 0, 'Average (2096-2100)', style1 )
  wssecd.write( (numrows+6), 0, 'StdDev (2096-2100)', style1 )


  wssecd.write( 0, 1, 'Secd01', style1 ) 
  for irow in range( numrows ):
    wssecd.write( (irow+1), 1, secd01data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
  stdevlabel = "STDEV($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
  wssecd.write( (numrows+2), 1, Formula( averagelabel ), style1 )
  wssecd.write( (numrows+3), 1, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
  stdevlabel = "STDEV($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
  wssecd.write( (numrows+5), 1, Formula( averagelabel ), style1 )
  wssecd.write( (numrows+6), 1, Formula( stdevlabel ), style1  )


  wssecd.write( 0, 2, 'Secd02', style1 ) 
  for irow in range( numrows ):
    wssecd.write( (irow+1), 2, secd02data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($C$" + str( inityr ) + ":$C$" + str( endyr ) + ")"
  stdevlabel = "STDEV($C$" + str( inityr ) + ":$C$" + str( endyr ) + ")"
  wssecd.write( (numrows+2), 2, Formula( averagelabel ), style1 )
  wssecd.write( (numrows+3), 2, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($C$" + str( inityr ) + ":$C$" + str( endyr ) + ")"
  stdevlabel = "STDEV($C$" + str( inityr ) + ":$C$" + str( endyr ) + ")"
  wssecd.write( (numrows+5), 2, Formula( averagelabel ), style1 )
  wssecd.write( (numrows+6), 2, Formula( stdevlabel ), style1  )


  wssecd.write( 0, 3, 'Secd03', style1 ) 
  for irow in range( numrows ):
    wssecd.write( (irow+1), 3, secd03data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
  stdevlabel = "STDEV($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
  wssecd.write( (numrows+2), 3, Formula( averagelabel ), style1 )
  wssecd.write( (numrows+3), 3, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
  stdevlabel = "STDEV($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
  wssecd.write( (numrows+5), 3, Formula( averagelabel ), style1 )
  wssecd.write( (numrows+6), 3, Formula( stdevlabel ), style1  )


  wssecd.write( 0, 4, 'Secd04', style1 ) 
  for irow in range( numrows ):
    wssecd.write( (irow+1), 4, secd04data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($E$" + str( inityr ) + ":$E$" + str( endyr ) + ")"
  stdevlabel = "STDEV($E$" + str( inityr ) + ":$E$" + str( endyr ) + ")"
  wssecd.write( (numrows+2), 4, Formula( averagelabel ), style1 )
  wssecd.write( (numrows+3), 4, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($E$" + str( inityr ) + ":$E$" + str( endyr ) + ")"
  stdevlabel = "STDEV($E$" + str( inityr ) + ":$E$" + str( endyr ) + ")"
  wssecd.write( (numrows+5), 4, Formula( averagelabel ), style1 )
  wssecd.write( (numrows+6), 4, Formula( stdevlabel ), style1  )


  wssecd.write( 0, 5, 'Secd05', style1 ) 
  for irow in range( numrows ):
    wssecd.write( (irow+1), 5, secd05data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($F$" + str( inityr ) + ":$F$" + str( endyr ) + ")"
  stdevlabel = "STDEV($F$" + str( inityr ) + ":$F$" + str( endyr ) + ")"
  wssecd.write( (numrows+2), 5, Formula( averagelabel ), style1 )
  wssecd.write( (numrows+3), 5, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($F$" + str( inityr ) + ":$F$" + str( endyr ) + ")"
  stdevlabel = "STDEV($F$" + str( inityr ) + ":$F$" + str( endyr ) + ")"
  wssecd.write( (numrows+5), 5, Formula( averagelabel ), style1 )
  wssecd.write( (numrows+6), 5, Formula( stdevlabel ), style1  )

  wssecd.write( 0, 6, 'Secd06', style1 ) 
  for irow in range( numrows ):
    wssecd.write( (irow+1), 6, secd06data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($G$" + str( inityr ) + ":$G$" + str( endyr ) + ")"
  stdevlabel = "STDEV($G$" + str( inityr ) + ":$G$" + str( endyr ) + ")"
  wssecd.write( (numrows+2), 6, Formula( averagelabel ), style1 )
  wssecd.write( (numrows+3), 6, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($G$" + str( inityr ) + ":$G$" + str( endyr ) + ")"
  stdevlabel = "STDEV($G$" + str( inityr ) + ":$G$" + str( endyr ) + ")"
  wssecd.write( (numrows+5), 6, Formula( averagelabel ), style1 )
  wssecd.write( (numrows+6), 6, Formula( stdevlabel ), style1  )

  wssecd.write( 0, 7, 'Secd07', style1 ) 
  for irow in range( numrows ):
    wssecd.write( (irow+1), 7, secd07data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($H$" + str( inityr ) + ":$H$" + str( endyr ) + ")"
  stdevlabel = "STDEV($H$" + str( inityr ) + ":$H$" + str( endyr ) + ")"
  wssecd.write( (numrows+2), 7, Formula( averagelabel ), style1 )
  wssecd.write( (numrows+3), 7, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($H$" + str( inityr ) + ":$H$" + str( endyr ) + ")"
  stdevlabel = "STDEV($H$" + str( inityr ) + ":$H$" + str( endyr ) + ")"
  wssecd.write( (numrows+5), 7, Formula( averagelabel ), style1 )
  wssecd.write( (numrows+6), 7, Formula( stdevlabel ), style1  )

  wssecd.write( 0, 8, 'Secd08', style1 ) 
  for irow in range( numrows ):
    wssecd.write( (irow+1), 8, secd08data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($I$" + str( inityr ) + ":$I$" + str( endyr ) + ")"
  stdevlabel = "STDEV($I$" + str( inityr ) + ":$I$" + str( endyr ) + ")"
  wssecd.write( (numrows+2), 8, Formula( averagelabel ), style1 )
  wssecd.write( (numrows+3), 8, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($I$" + str( inityr ) + ":$I$" + str( endyr ) + ")"
  stdevlabel = "STDEV($I$" + str( inityr ) + ":$I$" + str( endyr ) + ")"
  wssecd.write( (numrows+5), 8, Formula( averagelabel ), style1 )
  wssecd.write( (numrows+6), 8, Formula( stdevlabel ), style1  )

  wssecd.write( 0, 9, 'Secd26', style1 ) 
  for irow in range( numrows ):
    wssecd.write( (irow+1), 9, secd26data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($J$" + str( inityr ) + ":$J$" + str( endyr ) + ")"
  stdevlabel = "STDEV($J$" + str( inityr ) + ":$J$" + str( endyr ) + ")"
  wssecd.write( (numrows+2), 9, Formula( averagelabel ), style1 )
  wssecd.write( (numrows+3), 9, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($J$" + str( inityr ) + ":$J$" + str( endyr ) + ")"
  stdevlabel = "STDEV($J$" + str( inityr ) + ":$J$" + str( endyr ) + ")"
  wssecd.write( (numrows+5), 9, Formula( averagelabel ), style1 )
  wssecd.write( (numrows+6), 9, Formula( stdevlabel ), style1  )

  wssecd.write( 0, 10, 'Secd28', style1 ) 
  for irow in range( numrows ):
    wssecd.write( (irow+1), 10, secd28data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($K$" + str( inityr ) + ":$K$" + str( endyr ) + ")"
  stdevlabel = "STDEV($K$" + str( inityr ) + ":$K$" + str( endyr ) + ")"
  wssecd.write( (numrows+2), 10, Formula( averagelabel ), style1 )
  wssecd.write( (numrows+3), 10, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($K$" + str( inityr ) + ":$K$" + str( endyr ) + ")"
  stdevlabel = "STDEV($K$" + str( inityr ) + ":$K$" + str( endyr ) + ")"
  wssecd.write( (numrows+5), 10, Formula( averagelabel ), style1 )
  wssecd.write( (numrows+6), 10, Formula( stdevlabel ), style1  )


  wssecd.col(11).width = 21 * 256
  wssecd.write( 0, 11, 'Young Forest Total', style1 ) 
  for irow in range( numrows ):
    wssecd.write( (irow+1), 11, secdforestdata[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($L$" + str( inityr ) + ":$L$" + str( endyr ) + ")"
  stdevlabel = "STDEV($L$" + str( inityr ) + ":$L$" + str( endyr ) + ")"
  wssecd.write( (numrows+2), 11, Formula( averagelabel ), style1 )
  wssecd.write( (numrows+3), 11, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($L$" + str( inityr ) + ":$L$" + str( endyr ) + ")"
  stdevlabel = "STDEV($L$" + str( inityr ) + ":$L$" + str( endyr ) + ")"
  wssecd.write( (numrows+5), 11, Formula( averagelabel ), style1 )
  wssecd.write( (numrows+6), 11, Formula( stdevlabel ), style1  )


  wssecd.write( 0, 12, ('Cumulative ' + varname), style1 ) 
  wssecd.write( (startyr-firstyr), 12, '2001-2100', style1 )
  for irow in range( (startyr-firstyr+1), (lastyr-firstyr+2) ):
    dyr = startyr + (irow - (startyr-firstyr+1))
    aggregdata = secdforestdata[dyr] - secdforestdata[startyr-1] 
    wssecd.write( irow, 12, aggregdata, style1 )


  # Forest Sheet ***********************************************

  wsfor.col(0).width = 18 * 256
  wsfor.row( 0 ).write( 0, 'Year', style1 )
  for irow in range( numrows ):
    wsfor.row( (irow+1) ).write( 0, yrdata[firstyr+irow], style1 )

  wsfor.write( (numrows+2), 0, 'Average (2001-2005)', style1 )
  wsfor.write( (numrows+3), 0, 'StdDev (2001-2005)', style1 )

  wsfor.write( (numrows+5), 0, 'Average (2095-2099)', style1 )
  wsfor.write( (numrows+6), 0, 'StdDev (2095-2099)', style1 )


  wsfor.row( 0 ).write( 1, 'LC01', style1 ) 
  for irow in range( numrows ):
    wsfor.row( (irow+1) ).write( 1, lc01data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
  stdevlabel = "STDEV($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
  wsfor.write( (numrows+2), 1, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+3), 1, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
  stdevlabel = "STDEV($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
  wsfor.write( (numrows+5), 1, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+6), 1, Formula( stdevlabel ), style1  )


  wsfor.row( 0 ).write( 2, 'LC02', style1 ) 
  for irow in range( numrows ):
    wsfor.row( (irow+1) ).write( 2, lc02data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($C$" + str( inityr ) + ":$C$" + str( endyr ) + ")"
  stdevlabel = "STDEV($C$" + str( inityr ) + ":$C$" + str( endyr ) + ")"
  wsfor.write( (numrows+2), 2, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+3), 2, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($C$" + str( inityr ) + ":$C$" + str( endyr ) + ")"
  stdevlabel = "STDEV($C$" + str( inityr ) + ":$C$" + str( endyr ) + ")"
  wsfor.write( (numrows+5), 2, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+6), 2, Formula( stdevlabel ), style1  )


  wsfor.row( 0 ).write( 3, 'LC03', style1 ) 
  for irow in range( numrows ):
    wsfor.row( (irow+1) ).write( 3, lc03data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
  stdevlabel = "STDEV($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
  wsfor.write( (numrows+2), 3, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+3), 3, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
  stdevlabel = "STDEV($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
  wsfor.write( (numrows+5), 3, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+6), 3, Formula( stdevlabel ), style1  )


  wsfor.row( 0 ).write( 4, 'LC04', style1 ) 
  for irow in range( numrows ):
    wsfor.row( (irow+1) ).write( 4, lc04data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($E$" + str( inityr ) + ":$E$" + str( endyr ) + ")"
  stdevlabel = "STDEV($E$" + str( inityr ) + ":$E$" + str( endyr ) + ")"
  wsfor.write( (numrows+2), 4, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+3), 4, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($E$" + str( inityr ) + ":$E$" + str( endyr ) + ")"
  stdevlabel = "STDEV($E$" + str( inityr ) + ":$E$" + str( endyr ) + ")"
  wsfor.write( (numrows+5), 4, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+6), 4, Formula( stdevlabel ), style1  )


  wsfor.row( 0 ).write( 5, 'LC05', style1 ) 
  for irow in range( numrows ):
    wsfor.row( (irow+1) ).write( 5, lc05data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($F$" + str( inityr ) + ":$F$" + str( endyr ) + ")"
  stdevlabel = "STDEV($F$" + str( inityr ) + ":$F$" + str( endyr ) + ")"
  wsfor.write( (numrows+2), 5, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+3), 5, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($F$" + str( inityr ) + ":$F$" + str( endyr ) + ")"
  stdevlabel = "STDEV($F$" + str( inityr ) + ":$F$" + str( endyr ) + ")"
  wsfor.write( (numrows+5), 5, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+6), 5, Formula( stdevlabel ), style1  )


  wsfor.row( 0 ).write( 6, 'LC06', style1 ) 
  for irow in range( numrows ):
    wsfor.row( (irow+1) ).write( 6, lc06data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($G$" + str( inityr ) + ":$G$" + str( endyr ) + ")"
  stdevlabel = "STDEV($G$" + str( inityr ) + ":$G$" + str( endyr ) + ")"
  wsfor.write( (numrows+2), 6, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+3), 6, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($G$" + str( inityr ) + ":$G$" + str( endyr ) + ")"
  stdevlabel = "STDEV($G$" + str( inityr ) + ":$G$" + str( endyr ) + ")"
  wsfor.write( (numrows+5), 6, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+6), 6, Formula( stdevlabel ), style1  )


  wsfor.row( 0 ).write( 7, 'LC07', style1 ) 
  for irow in range( numrows ):
    wsfor.row( (irow+1) ).write( 7, lc07data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($H$" + str( inityr ) + ":$H$" + str( endyr ) + ")"
  stdevlabel = "STDEV($H$" + str( inityr ) + ":$H$" + str( endyr ) + ")"
  wsfor.write( (numrows+2), 7, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+3), 7, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($H$" + str( inityr ) + ":$H$" + str( endyr ) + ")"
  stdevlabel = "STDEV($H$" + str( inityr ) + ":$H$" + str( endyr ) + ")"
  wsfor.write( (numrows+5), 7, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+6), 7, Formula( stdevlabel ), style1  )


  wsfor.row( 0 ).write( 8, 'LC08', style1 ) 
  for irow in range( numrows ):
    wsfor.row( (irow+1) ).write( 8, lc08data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($I$" + str( inityr ) + ":$I$" + str( endyr ) + ")"
  stdevlabel = "STDEV($I$" + str( inityr ) + ":$I$" + str( endyr ) + ")"
  wsfor.write( (numrows+2), 8, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+3), 8, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($I$" + str( inityr ) + ":$I$" + str( endyr ) + ")"
  stdevlabel = "STDEV($I$" + str( inityr ) + ":$I$" + str( endyr ) + ")"
  wsfor.write( (numrows+5), 8, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+6), 8, Formula( stdevlabel ), style1  )


  wsfor.row( 0 ).write( 9, 'LC26', style1 ) 
  for irow in range( numrows ):
    wsfor.row( (irow+1) ).write( 9, lc26data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($J$" + str( inityr ) + ":$J$" + str( endyr ) + ")"
  stdevlabel = "STDEV($J$" + str( inityr ) + ":$J$" + str( endyr ) + ")"
  wsfor.write( (numrows+2), 9, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+3), 9, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($J$" + str( inityr ) + ":$J$" + str( endyr ) + ")"
  stdevlabel = "STDEV($J$" + str( inityr ) + ":$J$" + str( endyr ) + ")"
  wsfor.write( (numrows+5), 9, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+6), 9, Formula( stdevlabel ), style1  )


  wsfor.row( 0 ).write( 10, 'LC28', style1 ) 
  for irow in range( numrows ):
    wsfor.row( (irow+1) ).write( 10, lc28data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($K$" + str( inityr ) + ":$K$" + str( endyr ) + ")"
  stdevlabel = "STDEV($K$" + str( inityr ) + ":$K$" + str( endyr ) + ")"
  wsfor.write( (numrows+2), 10, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+3), 10, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($K$" + str( inityr ) + ":$K$" + str( endyr ) + ")"
  stdevlabel = "STDEV($K$" + str( inityr ) + ":$K$" + str( endyr ) + ")"
  wsfor.write( (numrows+5), 10, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+6), 10, Formula( stdevlabel ), style1  )


  wsfor.col(6).width = 13 * 256
  wsfor.row( 0 ).write( 11, 'All Forest Total', style1 ) 
  for irow in range( numrows ):
    wsfor.row( (irow+1) ).write( 11, allforestdata[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($L$" + str( inityr ) + ":$L$" + str( endyr ) + ")"
  stdevlabel = "STDEV($L$" + str( inityr ) + ":$L$" + str( endyr ) + ")"
  wsfor.write( (numrows+2), 11, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+3), 11, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($L$" + str( inityr ) + ":$L$" + str( endyr ) + ")"
  stdevlabel = "STDEV($L$" + str( inityr ) + ":$L$" + str( endyr ) + ")"
  wsfor.write( (numrows+5), 11, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+6), 11, Formula( stdevlabel ), style1  )


  wsfor.col(8).width = 21 * 256
  wsfor.row( 0 ).write( 13, 'Young Forest Total', style1 ) 
  for irow in range( numrows ):
    wsfor.row( (irow+1) ).write( 13, secdforestdata[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($N$" + str( inityr ) + ":$N$" + str( endyr ) + ")"
  stdevlabel = "STDEV($N$" + str( inityr ) + ":$N$" + str( endyr ) + ")"
  wsfor.write( (numrows+2), 13, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+3), 13, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($N$" + str( inityr ) + ":$N$" + str( endyr ) + ")"
  stdevlabel = "STDEV($N$" + str( inityr ) + ":$N$" + str( endyr ) + ")"
  wsfor.write( (numrows+5), 13, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+6), 13, Formula( stdevlabel ), style1  )


  wsfor.col(9).width = 17 * 256
  wsfor.row( 0 ).write( 14, 'Urban Forest Total', style1 ) 
  for irow in range( numrows ):
    wsfor.row( (irow+1) ).write( 14, urbanforestdata[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($O$" + str( inityr ) + ":$O$" + str( endyr ) + ")"
  stdevlabel = "STDEV($O$" + str( inityr ) + ":$O$" + str( endyr ) + ")"
  wsfor.write( (numrows+2), 14, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+3), 14, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($O$" + str( inityr ) + ":$O$" + str( endyr ) + ")"
  stdevlabel = "STDEV($O$" + str( inityr ) + ":$O$" + str( endyr ) + ")"
  wsfor.write( (numrows+5), 14, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+6), 14, Formula( stdevlabel ), style1  )


  wsfor.col(11).width = 18 * 256
  wsfor.row( 0 ).write( 15, 'Old Forest Total', style1 ) 
  for irow in range( numrows ):
    wsfor.row( (irow+1) ).write( 15, primforestdata[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($P$" + str( inityr ) + ":$P$" + str( endyr ) + ")"
  stdevlabel = "STDEV($P$" + str( inityr ) + ":$P$" + str( endyr ) + ")"
  wsfor.write( (numrows+2), 15, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+3), 15, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($P$" + str( inityr ) + ":$P$" + str( endyr ) + ")"
  stdevlabel = "STDEV($P$" + str( inityr ) + ":$P$" + str( endyr ) + ")"
  wsfor.write( (numrows+5), 15, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+6), 15, Formula( stdevlabel ), style1  )


  wsfor.col(12).width = 32 * 256
  wsfor.row( 0 ).write( 16, ('Cumulative Old Forest ' + varname), style1 )  
  wsfor.write( (startyr-firstyr), 16, '2001-2100', style1 )
  for irow in range( (startyr-firstyr+1), (lastyr-firstyr+2) ):
    dyr = startyr + (irow - (startyr-firstyr+1))
    aggregdata = primforestdata[dyr] - primforestdata[startyr-1] 
    wsfor.write( irow, 16, aggregdata, style1 )


  wsfor.col(14).width = 18 * 256
  wsfor.row( 0 ).write( 18, 'Natural Forest Total', style1 ) 
  for irow in range( numrows ):
    wsfor.row( (irow+1) ).write( 18, natforestdata[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($S$" + str( inityr ) + ":$S$" + str( endyr ) + ")"
  stdevlabel = "STDEV($S$" + str( inityr ) + ":$S$" + str( endyr ) + ")"
  wsfor.write( (numrows+2), 18, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+3), 18, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($S$" + str( inityr ) + ":$S$" + str( endyr ) + ")"
  stdevlabel = "STDEV($S$" + str( inityr ) + ":$S$" + str( endyr ) + ")"
  wsfor.write( (numrows+5), 18, Formula( averagelabel ), style1 )
  wsfor.write( (numrows+6), 18, Formula( stdevlabel ), style1  )


  wsfor.row( 0 ).write( 19, ('Cumulative Natural Forest ' + varname), style1 ) 
  wsfor.write( (startyr-firstyr), 19, '2001-2100', style1 )
  for irow in range( (startyr-firstyr+1), (lastyr-firstyr+2) ):
    dyr = startyr + (irow - (startyr-firstyr+1))
    aggregdata = natforestdata[dyr] - natforestdata[startyr-1] 
    wsfor.write( irow, 19, aggregdata, style1 )


  # Shrub Sheet ***********************************************

  wsshrub.col(0).width = 18 * 256
  wsshrub.write( 0, 0, 'Year', style1 )
  for irow in range( numrows ):
    wsshrub.write( (irow+1), 0, yrdata[firstyr+irow], style1 )

  wsshrub.write( (numrows+2), 0, 'Average (2001-2005)', style1 )
  wsshrub.write( (numrows+3), 0, 'StdDev (2001-2005)', style1 )

  wsshrub.write( (numrows+5), 0, 'Average (2096-2100)', style1 )
  wsshrub.write( (numrows+6), 0, 'StdDev (2096-2100)', style1 )


  wsshrub.write( 0, 1, 'LC09', style1 ) 
  for irow in range( numrows ):
    wsshrub.write( (irow+1), 1, lc09data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
  stdevlabel = "STDEV($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
  wsshrub.write( (numrows+2), 1, Formula( averagelabel ), style1 )
  wsshrub.write( (numrows+3), 1, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
  stdevlabel = "STDEV($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
  wsshrub.write( (numrows+5), 1, Formula( averagelabel ), style1 )
  wsshrub.write( (numrows+6), 1, Formula( stdevlabel ), style1  )


  wsshrub.row( 0 ).write( 2, 'LC10', style1 ) 
  for irow in range( numrows ):
    wsshrub.row( (irow+1) ).write( 2, lc10data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($C$" + str( inityr ) + ":$C$" + str( endyr ) + ")"
  stdevlabel = "STDEV($C$" + str( inityr ) + ":$C$" + str( endyr ) + ")"
  wsshrub.write( (numrows+2), 2, Formula( averagelabel ), style1 )
  wsshrub.write( (numrows+3), 2, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($C$" + str( inityr ) + ":$C$" + str( endyr ) + ")"
  stdevlabel = "STDEV($C$" + str( inityr ) + ":$C$" + str( endyr ) + ")"
  wsshrub.write( (numrows+5), 2, Formula( averagelabel ), style1 )
  wsshrub.write( (numrows+6), 2, Formula( stdevlabel ), style1  )


  wsshrub.row( 0 ).write( 3, 'LC11', style1 ) 
  for irow in range( numrows ):
    wsshrub.row( (irow+1) ).write( 3, lc11data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
  stdevlabel = "STDEV($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
  wsshrub.write( (numrows+2), 3, Formula( averagelabel ), style1 )
  wsshrub.write( (numrows+3), 3, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
  stdevlabel = "STDEV($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
  wsshrub.write( (numrows+5), 3, Formula( averagelabel ), style1 )
  wsshrub.write( (numrows+6), 3, Formula( stdevlabel ), style1  )


  wsshrub.col(3).width = 11 * 256
  wsshrub.row( 0 ).write( 4, 'Shrub Total', style1 ) 
  for irow in range( numrows ):
    wsshrub.row( (irow+1) ).write( 4, shrubdata[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($E$" + str( inityr ) + ":$E$" + str( endyr ) + ")"
  stdevlabel = "STDEV($E$" + str( inityr ) + ":$E$" + str( endyr ) + ")"
  wsshrub.write( (numrows+2), 4, Formula( averagelabel ), style1 )
  wsshrub.write( (numrows+3), 4, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($E$" + str( inityr ) + ":$E$" + str( endyr ) + ")"
  stdevlabel = "STDEV($E$" + str( inityr ) + ":$E$" + str( endyr ) + ")"
  wsshrub.write( (numrows+5), 4, Formula( averagelabel ), style1 )
  wsshrub.write( (numrows+6), 4, Formula( stdevlabel ), style1  )


  wsshrub.write( 0, 5, ('Cumulative Shrub ' + varname), style1 ) 
  wsshrub.write( (startyr-firstyr), 5, '2001-2100', style1 )
  for irow in range( (startyr-firstyr+1), (lastyr-firstyr+2) ):
    dyr = startyr + (irow - (startyr-firstyr+1))
    aggregdata = shrubdata[dyr] - shrubdata[startyr-1] 
    wsshrub.write( irow, 5, aggregdata, style1 )


  # Grass Sheet ***********************************************

  wsgrass.col(0).width = 18 * 256
  wsgrass.write( 0, 0, 'Year', style1 )
  for irow in range( numrows ):
    wsgrass.write( (irow+1), 0, yrdata[firstyr+irow], style1 )

  wsgrass.write( (numrows+2), 0, 'Average (2001-2005)', style1 )
  wsgrass.write( (numrows+3), 0, 'StdDev (2001-2005)', style1 )

  wsgrass.write( (numrows+5), 0, 'Average (2096-2100)', style1 )
  wsgrass.write( (numrows+6), 0, 'StdDev (2096-2100)', style1 )


  wsgrass.write( 0, 1, 'LC13', style1 ) 
  for irow in range( numrows ):
    wsgrass.write( (irow+1), 1, lc13data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
  stdevlabel = "STDEV($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
  wsgrass.write( (numrows+2), 1, Formula( averagelabel ), style1 )
  wsgrass.write( (numrows+3), 1, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
  stdevlabel = "STDEV($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
  wsgrass.write( (numrows+5), 1, Formula( averagelabel ), style1 )
  wsgrass.write( (numrows+6), 1, Formula( stdevlabel ), style1  )


  wsgrass.row( 0 ).write( 2, 'LC14', style1 ) 
  for irow in range( numrows ):
    wsgrass.row( (irow+1) ).write( 2, lc14data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($C$" + str( inityr ) + ":$C$" + str( endyr ) + ")"
  stdevlabel = "STDEV($C$" + str( inityr ) + ":$C$" + str( endyr ) + ")"
  wsgrass.write( (numrows+2), 2, Formula( averagelabel ), style1 )
  wsgrass.write( (numrows+3), 2, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($C$" + str( inityr ) + ":$C$" + str( endyr ) + ")"
  stdevlabel = "STDEV($C$" + str( inityr ) + ":$C$" + str( endyr ) + ")"
  wsgrass.write( (numrows+5), 2, Formula( averagelabel ), style1 )
  wsgrass.write( (numrows+6), 2, Formula( stdevlabel ), style1  )


  wsgrass.row( 0 ).write( 3, 'LC27', style1 ) 
  for irow in range( numrows ):
    wsgrass.row( (irow+1) ).write( 3, lc27data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
  stdevlabel = "STDEV($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
  wsgrass.write( (numrows+2), 3, Formula( averagelabel ), style1 )
  wsgrass.write( (numrows+3), 3, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
  stdevlabel = "STDEV($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
  wsgrass.write( (numrows+5), 3, Formula( averagelabel ), style1 )
  wsgrass.write( (numrows+6), 3, Formula( stdevlabel ), style1  )


  wsgrass.row( 0 ).write( 4, 'LC29', style1 ) 
  for irow in range( numrows ):
    wsgrass.row( (irow+1) ).write( 4, lc29data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($E$" + str( inityr ) + ":$E$" + str( endyr ) + ")"
  stdevlabel = "STDEV($E$" + str( inityr ) + ":$E$" + str( endyr ) + ")"
  wsgrass.write( (numrows+2), 4, Formula( averagelabel ), style1 )
  wsgrass.write( (numrows+3), 4, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($E$" + str( inityr ) + ":$E$" + str( endyr ) + ")"
  stdevlabel = "STDEV($E$" + str( inityr ) + ":$E$" + str( endyr ) + ")"
  wsgrass.write( (numrows+5), 4, Formula( averagelabel ), style1 )
  wsgrass.write( (numrows+6), 4, Formula( stdevlabel ), style1  )


  wsgrass.col(3).width = 11 * 256
  wsgrass.row( 0 ).write( 5, 'Grass Total', style1 ) 
  for irow in range( numrows ):
    wsgrass.row( (irow+1) ).write( 5, grassdata[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($F$" + str( inityr ) + ":$F$" + str( endyr ) + ")"
  stdevlabel = "STDEV($F$" + str( inityr ) + ":$F$" + str( endyr ) + ")"
  wsgrass.write( (numrows+2), 5, Formula( averagelabel ), style1 )
  wsgrass.write( (numrows+3), 5, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($F$" + str( inityr ) + ":$F$" + str( endyr ) + ")"
  stdevlabel = "STDEV($F$" + str( inityr ) + ":$F$" + str( endyr ) + ")"
  wsgrass.write( (numrows+5), 5, Formula( averagelabel ), style1 )
  wsgrass.write( (numrows+6), 5, Formula( stdevlabel ), style1  )


  wsgrass.write( 0, 6, ('Cumulative Grass ' + varname), style1 ) 
  wsgrass.write( (startyr-firstyr), 6, '2001-2100', style1 )
  for irow in range( (startyr-firstyr+1), (lastyr-firstyr+2) ):
    dyr = startyr + (irow - (startyr-firstyr+1))
    aggregdata = grassdata[dyr] - grassdata[startyr-1] 
    wsgrass.write( irow, 6, aggregdata, style1 )


  # Other Sheet ***********************************************

  wsother.col(0).width = 18 * 256
  wsother.row( 0 ).write( 0, 'Year', style1 )
  for irow in range( numrows ):
    wsother.row( (irow+1) ).write( 0, yrdata[firstyr+irow], style1 )

  wsother.write( (numrows+2), 0, 'Average (2001-2005)', style1 )
  wsother.write( (numrows+3), 0, 'StdDev (2001-2005)', style1 )

  wsother.write( (numrows+5), 0, 'Average (2095-2099)', style1 )
  wsother.write( (numrows+6), 0, 'StdDev (2095-2099)', style1 )


  wsother.row( 0 ).write( 1, 'LC00', style1 ) 
  for irow in range( numrows ):
    wsother.row( (irow+1) ).write( 1, lc00data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
  stdevlabel = "STDEV($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
  wsother.write( (numrows+2), 1, Formula( averagelabel ), style1 )
  wsother.write( (numrows+3), 1, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
  stdevlabel = "STDEV($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
  wsother.write( (numrows+5), 1, Formula( averagelabel ), style1 )
  wsother.write( (numrows+6), 1, Formula( stdevlabel ), style1  )


  wsother.row( 0 ).write( 2, 'LC12', style1 ) 
  for irow in range( numrows ):
    wsother.row( (irow+1) ).write( 2, lc12data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($C$" + str( inityr ) + ":$C$" + str( endyr ) + ")"
  stdevlabel = "STDEV($C$" + str( inityr ) + ":$C$" + str( endyr ) + ")"
  wsother.write( (numrows+2), 2, Formula( averagelabel ), style1 )
  wsother.write( (numrows+3), 2, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($C$" + str( inityr ) + ":$C$" + str( endyr ) + ")"
  stdevlabel = "STDEV($C$" + str( inityr ) + ":$C$" + str( endyr ) + ")"
  wsother.write( (numrows+5), 2, Formula( averagelabel ), style1 )
  wsother.write( (numrows+6), 2, Formula( stdevlabel ), style1  )


  wsother.row( 0 ).write( 3, 'LC17', style1 ) 
  for irow in range( numrows ):
    wsother.row( (irow+1) ).write( 3, lc17data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
  stdevlabel = "STDEV($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
  wsother.write( (numrows+2), 3, Formula( averagelabel ), style1 )
  wsother.write( (numrows+3), 3, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
  stdevlabel = "STDEV($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
  wsother.write( (numrows+5), 3, Formula( averagelabel ), style1 )
  wsother.write( (numrows+6), 3, Formula( stdevlabel ), style1  )


  wsother.row( 0 ).write( 4, 'LC18', style1 ) 
  for irow in range( numrows ):
    wsother.row( (irow+1) ).write( 4, lc18data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($E$" + str( inityr ) + ":$E$" + str( endyr ) + ")"
  stdevlabel = "STDEV($E$" + str( inityr ) + ":$E$" + str( endyr ) + ")"
  wsother.write( (numrows+2), 4, Formula( averagelabel ), style1 )
  wsother.write( (numrows+3), 4, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($E$" + str( inityr ) + ":$E$" + str( endyr ) + ")"
  stdevlabel = "STDEV($E$" + str( inityr ) + ":$E$" + str( endyr ) + ")"
  wsother.write( (numrows+5), 4, Formula( averagelabel ), style1 )
  wsother.write( (numrows+6), 4, Formula( stdevlabel ), style1  )


  wsother.row( 0 ).write( 5, 'LC19', style1 ) 
  for irow in range( numrows ):
    wsother.row( (irow+1) ).write( 5, lc19data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($F$" + str( inityr ) + ":$F$" + str( endyr ) + ")"
  stdevlabel = "STDEV($F$" + str( inityr ) + ":$F$" + str( endyr ) + ")"
  wsother.write( (numrows+2), 5, Formula( averagelabel ), style1 )
  wsother.write( (numrows+3), 5, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($F$" + str( inityr ) + ":$F$" + str( endyr ) + ")"
  stdevlabel = "STDEV($F$" + str( inityr ) + ":$F$" + str( endyr ) + ")"
  wsother.write( (numrows+5), 5, Formula( averagelabel ), style1 )
  wsother.write( (numrows+6), 5, Formula( stdevlabel ), style1  )


  wsother.row( 0 ).write( 6, 'LC20', style1 ) 
  for irow in range( numrows ):
    wsother.row( (irow+1) ).write( 6, lc20data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($G$" + str( inityr ) + ":$G$" + str( endyr ) + ")"
  stdevlabel = "STDEV($G$" + str( inityr ) + ":$G$" + str( endyr ) + ")"
  wsother.write( (numrows+2), 6, Formula( averagelabel ), style1 )
  wsother.write( (numrows+3), 6, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($G$" + str( inityr ) + ":$G$" + str( endyr ) + ")"
  stdevlabel = "STDEV($G$" + str( inityr ) + ":$G$" + str( endyr ) + ")"
  wsother.write( (numrows+5), 6, Formula( averagelabel ), style1 )
  wsother.write( (numrows+6), 6, Formula( stdevlabel ), style1  )


  wsother.row( 0 ).write( 7, 'LC21', style1 ) 
  for irow in range( numrows ):
    wsother.row( (irow+1) ).write( 7, lc21data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($H$" + str( inityr ) + ":$H$" + str( endyr ) + ")"
  stdevlabel = "STDEV($H$" + str( inityr ) + ":$H$" + str( endyr ) + ")"
  wsother.write( (numrows+2), 7, Formula( averagelabel ), style1 )
  wsother.write( (numrows+3), 7, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($H$" + str( inityr ) + ":$H$" + str( endyr ) + ")"
  stdevlabel = "STDEV($H$" + str( inityr ) + ":$H$" + str( endyr ) + ")"
  wsother.write( (numrows+5), 7, Formula( averagelabel ), style1 )
  wsother.write( (numrows+6), 7, Formula( stdevlabel ), style1  )


  wsother.row( 0 ).write( 8, 'LC22', style1 ) 
  for irow in range( numrows ):
    wsother.row( (irow+1) ).write( 8, lc22data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($I$" + str( inityr ) + ":$I$" + str( endyr ) + ")"
  stdevlabel = "STDEV($I$" + str( inityr ) + ":$I$" + str( endyr ) + ")"
  wsother.write( (numrows+2), 8, Formula( averagelabel ), style1 )
  wsother.write( (numrows+3), 8, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($I$" + str( inityr ) + ":$I$" + str( endyr ) + ")"
  stdevlabel = "STDEV($I$" + str( inityr ) + ":$I$" + str( endyr ) + ")"
  wsother.write( (numrows+5), 8, Formula( averagelabel ), style1 )
  wsother.write( (numrows+6), 8, Formula( stdevlabel ), style1  )


  wsother.row( 0 ).write( 9, 'LC23', style1 ) 
  for irow in range( numrows ):
    wsother.row( (irow+1) ).write( 9, lc23data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($J$" + str( inityr ) + ":$J$" + str( endyr ) + ")"
  stdevlabel = "STDEV($J$" + str( inityr ) + ":$J$" + str( endyr ) + ")"
  wsother.write( (numrows+2), 9, Formula( averagelabel ), style1 )
  wsother.write( (numrows+3), 9, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($J$" + str( inityr ) + ":$J$" + str( endyr ) + ")"
  stdevlabel = "STDEV($J$" + str( inityr ) + ":$J$" + str( endyr ) + ")"
  wsother.write( (numrows+5), 9, Formula( averagelabel ), style1 )
  wsother.write( (numrows+6), 9, Formula( stdevlabel ), style1  )


  wsother.row( 0 ).write( 10, 'LC24', style1 ) 
  for irow in range( numrows ):
    wsother.row( (irow+1) ).write( 10, lc24data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($K$" + str( inityr ) + ":$K$" + str( endyr ) + ")"
  stdevlabel = "STDEV($K$" + str( inityr ) + ":$K$" + str( endyr ) + ")"
  wsother.write( (numrows+2), 10, Formula( averagelabel ), style1 )
  wsother.write( (numrows+3), 10, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($K$" + str( inityr ) + ":$K$" + str( endyr ) + ")"
  stdevlabel = "STDEV($K$" + str( inityr ) + ":$K$" + str( endyr ) + ")"
  wsother.write( (numrows+5), 10, Formula( averagelabel ), style1 )
  wsother.write( (numrows+6), 10, Formula( stdevlabel ), style1  )


  wsother.row( 0 ).write( 11, 'LC25', style1 ) 
  for irow in range( numrows ):
    wsother.row( (irow+1) ).write( 11, lc25data[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($L$" + str( inityr ) + ":$L$" + str( endyr ) + ")"
  stdevlabel = "STDEV($L$" + str( inityr ) + ":$L$" + str( endyr ) + ")"
  wsother.write( (numrows+2), 11, Formula( averagelabel ), style1 )
  wsother.write( (numrows+3), 11, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($L$" + str( inityr ) + ":$L$" + str( endyr ) + ")"
  stdevlabel = "STDEV($L$" + str( inityr ) + ":$L$" + str( endyr ) + ")"
  wsother.write( (numrows+5), 11, Formula( averagelabel ), style1 )
  wsother.write( (numrows+6), 11, Formula( stdevlabel ), style1  )


  wsother.col(4).width = 14 * 256
  wsother.row( 0 ).write( 12, 'Other Total', style1 ) 
  for irow in range( numrows ):
    wsother.row( (irow+1) ).write( 12, otherdata[firstyr+irow], style1 )

  endyr = 2005 - firstyr + 2
  inityr = 2001 - firstyr + 2
  averagelabel = "AVERAGE($M$" + str( inityr ) + ":$M$" + str( endyr ) + ")"
  stdevlabel = "STDEV($M$" + str( inityr ) + ":$M$" + str( endyr ) + ")"
  wsother.write( (numrows+2), 12, Formula( averagelabel ), style1 )
  wsother.write( (numrows+3), 12, Formula( stdevlabel ), style1 )

  endyr = 2096 - firstyr + 2
  inityr = 2100 - firstyr + 2
  averagelabel = "AVERAGE($M$" + str( inityr ) + ":$M$" + str( endyr ) + ")"
  stdevlabel = "STDEV($M$" + str( inityr ) + ":$M$" + str( endyr ) + ")"
  wsother.write( (numrows+5), 12, Formula( averagelabel ), style1 )
  wsother.write( (numrows+6), 12, Formula( stdevlabel ), style1  )


  wsother.write( 0, 13, ('Cumulative Other ' + varname), style1 ) 
  wsother.write( (startyr-firstyr), 13, '2001-2100', style1 )
  for irow in range( (startyr-firstyr+1), (lastyr-firstyr+2) ):
    dyr = startyr + (irow - (startyr-firstyr+1))
    aggregdata = otherdata[dyr] - otherdata[startyr-1] 
    wsother.write( irow, 13, aggregdata, style1 )


  # Urban Sheet ***********************************************

#  wsurbn.col(0).width = 18 * 256
#  wsurbn.row( 0 ).write( 0, 'Year', style1 )
#  for irow in range( numrows ):
#    wsurbn.row( (irow+1) ).write( 0, yrdata[firstyr+irow], style1 )

#  wsurbn.write( (numrows+2), 0, 'Average (2001-2005)', style1 )
#  wsurbn.write( (numrows+3), 0, 'StdDev (2001-2005)', style1 )

#  wsurbn.write( (numrows+5), 0, 'Average (2095-2099)', style1 )
#  wsurbn.write( (numrows+6), 0, 'StdDev (2095-2099)', style1 )


#  wsurbn.write( 0, 1, 'Urbn02', style1 ) 
#  for irow in range( numrows ):
#    wsurbn.write( (irow+1), 1, urban02data[firstyr+irow], style1 )

#  endyr = 2005 - firstyr + 2
#  inityr = 2001 - firstyr + 2
#  averagelabel = "AVERAGE($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
#  stdevlabel = "STDEV($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
#  wsurbn.write( (numrows+2), 1, Formula( averagelabel ), style1 )
#  wsurbn.write( (numrows+3), 1, Formula( stdevlabel ), style1 )

#  endyr = 2096 - firstyr + 2
#  inityr = 2100 - firstyr + 2
#  averagelabel = "AVERAGE($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
#  stdevlabel = "STDEV($B$" + str( inityr ) + ":$B$" + str( endyr ) + ")"
#  wsurbn.write( (numrows+5), 1, Formula( averagelabel ), style1 )
#  wsurbn.write( (numrows+6), 1, Formula( stdevlabel ), style1  )


#  wsurbn.row( 0 ).write( 2, 'Urbn03', style1 ) 
#  for irow in range( numrows ):
#    wsurbn.row( (irow+1) ).write( 2, urban03data[firstyr+irow], style1 )

#  endyr = 2005 - firstyr + 2
#  inityr = 2001 - firstyr + 2
#  averagelabel = "AVERAGE($C$" + str( inityr ) + ":$C$" + str( endyr ) + ")* 10.0"
#  stdevlabel = "STDEV($C$" + str( inityr ) + ":$C$" + str( endyr ) + ")* 10.0"
#  wsurbn.write( (numrows+2), 2, Formula( averagelabel ), style1 )
#  wsurbn.write( (numrows+3), 2, Formula( stdevlabel ), style1 )

#  endyr = 2096 - firstyr + 2
#  inityr = 2100 - firstyr + 2
#  averagelabel = "AVERAGE($C$" + str( inityr ) + ":$C$" + str( endyr ) + ")"
#  stdevlabel = "STDEV($C$" + str( inityr ) + ":$C$" + str( endyr ) + ")"
#  wsurbn.write( (numrows+5), 2, Formula( averagelabel ), style1 )
#  wsurbn.write( (numrows+6), 2, Formula( stdevlabel ), style1  )


#  wsurbn.row( 0 ).write( 3, 'Urbn06', style1 ) 
#  for irow in range( numrows ):
#    wsurbn.row( (irow+1) ).write( 3, urban06data[firstyr+irow], style1 )

#  endyr = 2005 - firstyr + 2
#  inityr = 2001 - firstyr + 2
#  averagelabel = "AVERAGE($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
#  stdevlabel = "STDEV($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
#  wsurbn.write( (numrows+2), 3, Formula( averagelabel ), style1 )
#  wsurbn.write( (numrows+3), 3, Formula( stdevlabel ), style1 )

#  endyr = 2096 - firstyr + 2
#  inityr = 2100 - firstyr + 2
#  averagelabel = "AVERAGE($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
#  stdevlabel = "STDEV($D$" + str( inityr ) + ":$D$" + str( endyr ) + ")"
#  wsurbn.write( (numrows+5), 3, Formula( averagelabel ), style1 )
#  wsurbn.write( (numrows+6), 3, Formula( stdevlabel ), style1  )


#  wsurbn.row( 0 ).write( 4, 'Urbn16', style1 ) 
#  for irow in range( numrows ):
#    wsurbn.row( (irow+1) ).write( 4, urban16data[firstyr+irow], style1 )

#  endyr = 2005 - firstyr + 2
#  inityr = 2001 - firstyr + 2
#  averagelabel = "AVERAGE($E$" + str( inityr ) + ":$E$" + str( endyr ) + ")"
#  stdevlabel = "STDEV($E$" + str( inityr ) + ":$E$" + str( endyr ) + ")"
#  wsurbn.write( (numrows+2), 4, Formula( averagelabel ), style1 )
#  wsurbn.write( (numrows+3), 4, Formula( stdevlabel ), style1 )

#  endyr = 2096 - firstyr + 2
#  inityr = 2100 - firstyr + 2
#  averagelabel = "AVERAGE($E$" + str( inityr ) + ":$E$" + str( endyr ) + ")"
#  stdevlabel = "STDEV($E$" + str( inityr ) + ":$E$" + str( endyr ) + ")"
#  wsurbn.write( (numrows+5), 4, Formula( averagelabel ), style1 )
#  wsurbn.write( (numrows+6), 4, Formula( stdevlabel ), style1  )


#  wsurbn.row( 0 ).write( 5, 'Urbn17', style1 ) 
#  for irow in range( numrows ):
#    wsurbn.row( (irow+1) ).write( 5, urban17data[firstyr+irow], style1 )

#  endyr = 2005 - firstyr + 2
#  inityr = 2001 - firstyr + 2
#  averagelabel = "AVERAGE($F$" + str( inityr ) + ":$F$" + str( endyr ) + ")"
#  stdevlabel = "STDEV($F$" + str( inityr ) + ":$F$" + str( endyr ) + ")"
#  wsurbn.write( (numrows+2), 5, Formula( averagelabel ), style1 )
#  wsurbn.write( (numrows+3), 5, Formula( stdevlabel ), style1 )

#  endyr = 2096 - firstyr + 2
#  inityr = 2100 - firstyr + 2
#  averagelabel = "AVERAGE($F$" + str( inityr ) + ":$F$" + str( endyr ) + ")"
#  stdevlabel = "STDEV($F$" + str( inityr ) + ":$F$" + str( endyr ) + ")"
#  wsurbn.write( (numrows+5), 5, Formula( averagelabel ), style1 )
#  wsurbn.write( (numrows+6), 5, Formula( stdevlabel ), style1  )


#  wsurbn.col(6).width = 11 * 256
#  wsurbn.row( 0 ).write( 6, 'Urban Total', style1 ) 
#  for irow in range( numrows ):
#    wsurbn.row( (irow+1) ).write( 6, urbantotaldata[firstyr+irow], style1 )

#  endyr = 2005 - firstyr + 2
#  inityr = 2001 - firstyr + 2
#  averagelabel = "AVERAGE($G$" + str( inityr ) + ":$G$" + str( endyr ) + ")"
#  stdevlabel = "STDEV($G$" + str( inityr ) + ":$G$" + str( endyr ) + ")"
#  wsurbn.write( (numrows+2), 6, Formula( averagelabel ), style1 )
#  wsurbn.write( (numrows+3), 6, Formula( stdevlabel ), style1 )

#  endyr = 2096 - firstyr + 2
#  inityr = 2100 - firstyr + 2
#  averagelabel = "AVERAGE($G$" + str( inityr ) + ":$G$" + str( endyr ) + ")"
#  stdevlabel = "STDEV($G$" + str( inityr ) + ":$G$" + str( endyr ) + ")"
#  wsurbn.write( (numrows+5), 6, Formula( averagelabel ), style1 )
#  wsurbn.write( (numrows+6), 6, Formula( stdevlabel ), style1  )


#  wsurbn.row( 0 ).write( 7, ('Cumulative Urban ' + varname), style1 ) 
#  wsurbn.write( (startyr-firstyr), 7, '1700-2010', style1 )
#  for irow in range( (startyr-firstyr+1), (lastyr-firstyr+2) ):
#    dyr = startyr + (irow - (startyr-firstyr+1))
#  	aggregdata = urbantotaldata[dyr] - urbantotaldata[startyr-1] 
#  	wsurbn.write( irow, 7, aggregdata, style1 )

#  wsurbn.row( 0 ).write( 11, 'Urban Forest Total', style1 ) 
#  for irow in range( numrows ):
#    wsurbn.row( (irow+1) ).write( 11, urbanforestdata[firstyr+irow], style1 )

#  endyr = 2005 - firstyr + 2
#  inityr = 2001 - firstyr + 2
#  averagelabel = "AVERAGE($L$" + str( inityr ) + ":$L$" + str( endyr ) + ")"
#  stdevlabel = "STDEV($L$" + str( inityr ) + ":$L$" + str( endyr ) + ")"
#  wsurbn.write( (numrows+2), 11, Formula( averagelabel ), style1 )
#  wsurbn.write( (numrows+3), 11, Formula( stdevlabel ), style1 )

#  endyr = 2096 - firstyr + 2
#  inityr = 2100 - firstyr + 2
#  averagelabel = "AVERAGE($L$" + str( inityr ) + ":$L$" + str( endyr ) + ")"
#  stdevlabel = "STDEV($L$" + str( inityr ) + ":$L$" + str( endyr ) + ")"
#  wsurbn.write( (numrows+5), 11, Formula( averagelabel ), style1 )
#  wsurbn.write( (numrows+6), 11, Formula( stdevlabel ), style1  )


  wb.save( osumxcelfile )   


